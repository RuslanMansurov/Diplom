
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
    
    #Область ПрограммныйИнтерфейс
    
    Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
        
        Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
            
            КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
            КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
            КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
            КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
            
            Возврат КомандаСоздатьНаОсновании;
            
        КонецЕсли;
        
        Возврат Неопределено;
        
    КонецФункции
    
    #КонецОбласти
    
#КонецЕсли

//ВКМ. Реализуем печать акта об оказанных услугах
//{{ВКМ. Добавляем команду печати
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
    
    // ВКМ. Акт об оказанных услугах 
    КомандаПечати = КомандыПечати.Добавить();
    КомандаПечати.Идентификатор = "АктОбОказанныхУслугах";
    КомандаПечати.Представление = НСтр("ru = 'Акт об оказанных услугах'");
    КомандаПечати.Порядок = 10;
    
КонецПроцедуры
//}} ВКМ         

//{{ВКМ. Добавляем процедуру Печать
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
    
    ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АктОбОказанныхУслугах");
    Если ПечатнаяФорма <> Неопределено Тогда
        ОфисныеДокументы = НапечататьАктDOCX(МассивОбъектов);
        ПечатнаяФорма.СинонимМакета = НСтр("ru = 'АктОбОказанныхУслугах (MS Word)'");
        ПечатнаяФорма.ОфисныеДокументы = ОфисныеДокументы;
    КонецЕсли;
    
КонецПроцедуры
//}} ВКМ         

//{{ВКМ. Добавляем функцию для печати Акта об оказанных услугах 
Функция НапечататьАктDOCX(МассивОбъектов)
    // ВКМ. Создаём пустое соответствие для размещения печатных форм OpenXМL — результат функции
    ОфисныеДокументы = Новый Соответствие;
    
    // ВКМ. Готовим макет для формирования печатной формы OpenXML
    МакетДокумента = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ВКМ_АктОбОказанныхУслугах");
    Макет = УправлениеПечатью.ИнициализироватьМакетОфисногоДокумента(МакетДокумента, Неопределено);  
    
    // ВКМ. Создаём структуру областей формируемой печатной формы OpenXМL
    ОписаниеОбластей = Новый Структура;
    УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Шапка", "Общая");
    УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ШапкаТаблицы", "Общая");
    УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "СтрокаТаблицы", "СтрокаТаблицы");
    УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Тело", "Общая");
    УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Подвал", "Общая");
    
    // ВКМ. Получаем данные для печати из базы данных
    ДанныеДляПечати = ПолучитьДанныеДокументов(МассивОбъектов);
    
    Для Каждого Данные Из ДанныеДляПечати Цикл 
        ЗначенияПараметровПечати = Новый Структура;
        ЗначенияПараметровПечати.Вставить("Город", "Москва");
        Дата = Формат(Данные.Дата, "ДФ=dd.MM.yyyy");
        ЗначенияПараметровПечати.Вставить("Дата", Дата);
        ЗначенияПараметровПечати.Вставить("Номер", Данные.Номер);
        ЗначенияПараметровПечати.Вставить("Исполнитель", Данные.Организация);  
        ЗначенияПараметровПечати.Вставить("Заказчик", Данные.Контрагент); 
        ЗначенияПараметровПечати.Вставить("Договор", Данные.Договор); 
        
        ДанныеУслуги = ОбщегоНазначения.ТаблицаЗначенийВМассив(Данные.Услуги);
        
        ЗначенияПараметровПечати.Вставить("СуммаДокумента", Данные.СуммаДокумента);   
        
        //ВКМ. Формируем сумму прописью
        ФормСтрока= "Л = ru_RU; ДП = Истина";
        ПарПредмета="рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2";
        СуммаПрописью = ЧислоПрописью(Данные.СуммаДокумента, ФормСтрока, ПарПредмета); 
        ЗначенияПараметровПечати.Вставить("СуммаПрописью", СуммаПрописью);   
        
        // ВКМ. Готовим печатную форму в формате офисного документа
        ПечатнаяФорма = УправлениеПечатью.ИнициализироватьПечатнуюФорму(Неопределено, Неопределено, Макет);
        
        Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей.Шапка);
        УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ЗначенияПараметровПечати);
        
        
        Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей.ШапкаТаблицы);
        УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ЗначенияПараметровПечати);
        
        Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей.СтрокаТаблицы);
        УправлениеПечатью.ПрисоединитьИЗаполнитьКоллекцию(ПечатнаяФорма, Область, ДанныеУслуги);
        
        
        Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей.Тело);
        УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ЗначенияПараметровПечати);
        
        Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей.Подвал);
        УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ЗначенияПараметровПечати);
        
        АдресХранилищаПечатнойФормы = УправлениеПечатью.СформироватьДокумент(ПечатнаяФорма);
        ОфисныеДокументы.Вставить(АдресХранилищаПечатнойФормы, Строка(Данные.Ссылка));
        УправлениеПечатью.ОчиститьСсылки(ПечатнаяФорма);
        
    КонецЦикла;        
    
    УправлениеПечатью.ОчиститьСсылки(Макет);
    
    Возврат ОфисныеДокументы;
    
КонецФункции  
//}} ВКМ         

//{{ ВКМ. Запросом получаем данные документа
Функция ПолучитьДанныеДокументов(МассивОбъектов)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   РеализацияТоваровУслуг.Номер КАК Номер,
    |   РеализацияТоваровУслуг.Дата КАК Дата,
    |   РеализацияТоваровУслуг.Контрагент КАК Контрагент,
    |   РеализацияТоваровУслуг.Организация КАК Организация,
    |   РеализацияТоваровУслуг.Договор КАК Договор,
    |   РеализацияТоваровУслуг.Товары.(
    |       Ссылка КАК Ссылка,
    |       НомерСтроки КАК НомерСтроки,
    |       Номенклатура КАК Номенклатура,
    |       Количество КАК Количество,
    |       Цена КАК Цена,
    |       Сумма КАК Сумма
    |   ) КАК Товары,
    |   РеализацияТоваровУслуг.Услуги.(
    |       Ссылка КАК Ссылка,
    |       НомерСтроки КАК НомерСтроки,
    |       Номенклатура КАК Номенклатура,
    |       Количество КАК Количество,
    |       Цена КАК Цена,
    |       Сумма КАК Сумма
    |   ) КАК Услуги,
    |   РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
    |   РеализацияТоваровУслуг.Ответственный КАК Ответственный,
    |   РеализацияТоваровУслуг.Ссылка КАК Ссылка
    |ИЗ
    |   Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
    |ГДЕ
    |   РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)";
    
    Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов); 
    Возврат Запрос.Выполнить().Выгрузить();
    
КонецФункции     
//}}ВКМ      


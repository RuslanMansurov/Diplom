//{{ВКМ. Обработка проведения документа Начисление зарплаты
Процедура ОбработкаПроведения(Отказ, Режим)
	
	//{{ВКМ. Регистр расчета ВКМ_ОсновныеНачисления
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	
	ВКМ_СформироватьДвижения();
	ВКМ_РассчитатьОклад(); 
	ВКМ_РассчитатьОтпуск();
	//}}
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры 

Процедура ВКМ_СформироватьДвижения()
	
	ВКМ_СформироватьДвижениеПоОкладу();
	ВКМ_СформироватьДвиженияПрочиеОсновныеНачисления();
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры      

Процедура ВКМ_СформироватьДвижениеПоОкладу()
	
	Отбор = Новый Структура();
	Отбор.Вставить("ВКМ_ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	СтрокиОклада = ВКМ_Начисления.НайтиСтроки(Отбор);
	
	Если СтрокиОклада.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	МинимальнаяДатаНачала = СтрокиОклада[0].ВКМ_ДатаНачала;
	МаксимальнаяДатаОкончания = СтрокиОклада[0].ВКМ_ДатаОкончания;
	
	Для Сч = 1 По СтрокиОклада.Количество() - 1 Цикл 
		
		Если МинимальнаяДатаНачала > СтрокиОклада[Сч].ВКМ_ДатаНачала Тогда
			МинимальнаяДатаНачала = СтрокиОклада[Сч].ВКМ_ДатаНачала;
		КонецЕсли; 
		
		Если МаксимальнаяДатаОкончания < СтрокиОклада[Сч].ВКМ_ДатаОкончания Тогда
			МаксимальнаяДатаОкончания = СтрокиОклада[Сч].ВКМ_ДатаОкончания;
		КонецЕсли;   
		
	КонецЦикла;   
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|    ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_Сотрудник КАК Сотрудник,
	|    ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_Подразделение КАК Подразделение,
	|    ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ДатаНачала КАК ДатаНачала,
	|    ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ДатаОкончания КАК ДатаОкончания,
	|    ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ВидРасчета КАК ВидРасчета,
	|    ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ГрафикРаботы КАК ГрафикРаботы
	|ПОМЕСТИТЬ ВТ_ПериодыОкладаИсходные
	|ИЗ
	|    Документ.ВКМ_НачисленияЗарплаты.ВКМ_Начисления КАК ВКМ_НачисленияЗарплатыВКМ_Начисления
	|ГДЕ
	|    ВКМ_НачисленияЗарплатыВКМ_Начисления.Ссылка = &Ссылка
	|    И ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ВидРасчета = &Оклад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период КАК Период,
	|    ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник КАК Сотрудник,
	|    ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Подразделение КАК Подразделение,
	|    ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Оклад КАК Оклад
	|ПОМЕСТИТЬ ВТ_ИзмененияОклада
	|ИЗ
	|    РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
	|            &МинимальнаяДатаНачала,
	|            (ВКМ_Сотрудник, ВКМ_Подразделение) В
	|                (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|                    ВТ_ПериодыОкладаИсходные.Сотрудник КАК Сотрудник,
	|                    ВТ_ПериодыОкладаИсходные.Подразделение КАК Подразделение
	|                ИЗ
	|                    ВТ_ПериодыОкладаИсходные КАК ВТ_ПериодыОкладаИсходные)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|    ВКМ_УсловияОплатыСотрудников.Период,
	|    ВКМ_УсловияОплатыСотрудников.ВКМ_Сотрудник,
	|    ВКМ_УсловияОплатыСотрудников.ВКМ_Подразделение,
	|    ВКМ_УсловияОплатыСотрудников.ВКМ_Оклад
	|ИЗ
	|    РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
	|ГДЕ
	|    ВКМ_УсловияОплатыСотрудников.Период > &МинимальнаяДатаНачала
	|    И ВКМ_УсловияОплатыСотрудников.Период <= &МаксимальнаяДатаОкончания
	|    И (ВКМ_УсловияОплатыСотрудников.ВКМ_Сотрудник, ВКМ_УсловияОплатыСотрудников.ВКМ_Подразделение) В
	|            (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|                ВТ_ПериодыОкладаИсходные.Сотрудник КАК Сотрудник,
	|                ВТ_ПериодыОкладаИсходные.Подразделение КАК Подразделение
	|            ИЗ
	|                ВТ_ПериодыОкладаИсходные КАК ВТ_ПериодыОкладаИсходные)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    ДатыНачала.Период КАК ДатаНачала,
	|    ДатыНачала.Сотрудник КАК Сотрудник,
	|    ДатыНачала.Подразделение КАК Подразделение,
	|    ДатыНачала.Оклад КАК Оклад,
	|    МИНИМУМ(ЕСТЬNULL(ДОБАВИТЬКДАТЕ(ДатыОкончания.Период, СЕКУНДА, -1), ДАТАВРЕМЯ(3999, 12, 31))) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ИнтервалыОклада
	|ИЗ
	|    ВТ_ИзмененияОклада КАК ДатыНачала
	|        ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИзмененияОклада КАК ДатыОкончания
	|        ПО ДатыНачала.Сотрудник = ДатыОкончания.Сотрудник
	|            И ДатыНачала.Подразделение = ДатыОкончания.Подразделение
	|            И ДатыНачала.Период < ДатыОкончания.Период
	|
	|СГРУППИРОВАТЬ ПО
	|    ДатыНачала.Сотрудник,
	|    ДатыНачала.Оклад,
	|    ДатыНачала.Период,
	|    ДатыНачала.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|    ВТ_ПериодыОкладаИсходные.Сотрудник КАК Сотрудник,
	|    ВТ_ПериодыОкладаИсходные.ВидРасчета КАК ВидРасчета,
	|    ВТ_ИнтервалыОклада.Оклад КАК Показатель,
	|    ВЫБОР
	|        КОГДА ВТ_ИнтервалыОклада.ДатаНачала > ВТ_ПериодыОкладаИсходные.ДатаНачала
	|            ТОГДА ВТ_ИнтервалыОклада.ДатаНачала
	|        ИНАЧЕ ВТ_ПериодыОкладаИсходные.ДатаНачала
	|    КОНЕЦ КАК ПериодДействияНачало,
	|    ВЫБОР
	|        КОГДА ВТ_ИнтервалыОклада.ДатаОкончания < ВТ_ПериодыОкладаИсходные.ДатаОкончания
	|            ТОГДА ВТ_ИнтервалыОклада.ДатаОкончания
	|        ИНАЧЕ ВТ_ПериодыОкладаИсходные.ДатаОкончания
	|    КОНЕЦ КАК ПериодДействияКонец,
	|    ВТ_ПериодыОкладаИсходные.ГрафикРаботы КАК ГрафикРаботы,
	|    ВТ_ПериодыОкладаИсходные.Подразделение КАК Подразделение
	|ИЗ
	|    ВТ_ПериодыОкладаИсходные КАК ВТ_ПериодыОкладаИсходные
	|        ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИнтервалыОклада КАК ВТ_ИнтервалыОклада
	|        ПО ВТ_ПериодыОкладаИсходные.Сотрудник = ВТ_ИнтервалыОклада.Сотрудник
	|            И (ВТ_ИнтервалыОклада.ДатаНачала <= ВТ_ПериодыОкладаИсходные.ДатаОкончания)
	|            И ВТ_ПериодыОкладаИсходные.ДатаНачала <= ВТ_ИнтервалыОклада.ДатаОкончания
	|            И ВТ_ПериодыОкладаИсходные.Подразделение = ВТ_ИнтервалыОклада.Подразделение";
	
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("МинимальнаяДатаНачала", МинимальнаяДатаНачала);
	Запрос.УстановитьПараметр("МаксимальнаяДатаОкончания", МаксимальнаяДатаОкончания);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		//{{ВКМ. Регистр расчета ВКМ_ОсновныеНачисления
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВКМ_Подразделение = ВыборкаДетальныеЗаписи.Подразделение;
		Движение.ВКМ_Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.ВКМ_Показатель = ВыборкаДетальныеЗаписи.Показатель;
		Движение.ВКМ_ГрафикРаботы = ВыборкаДетальныеЗаписи.ГрафикРаботы;
		Движение.ВидРасчета = ВыборкаДетальныеЗаписи.ВидРасчета;
		Движение.ПериодДействияНачало = ВыборкаДетальныеЗаписи.ПериодДействияНачало;
		Движение.ПериодДействияКонец = ВыборкаДетальныеЗаписи.ПериодДействияКонец;
		//}}ВКМ. 
		
		//{{ВКМ. Регистр ВКМ_Удержания
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВКМ_Подразделение = ВыборкаДетальныеЗаписи.Подразделение;
		Движение.ВКМ_Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.Оклад;
		//}}ВКМ. 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВКМ_СформироватьДвиженияПрочиеОсновныеНачисления()
	
	Для Каждого Строка Из ВКМ_Начисления Цикл  
		Если ТипЗнч(Строка.ВКМ_ВидРасчета) <> Тип("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.ВКМ_ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			Продолжить;
		КонецЕсли;
		
		//{{ВКМ. Регистр ВКМ_ОсновныеНачисления
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Строка.ВКМ_ДатаНачала;
		Движение.ПериодДействияКонец =Строка.ВКМ_ДатаОкончания;
		Движение.ВидРасчета = Строка.ВКМ_ВидРасчета;
		Движение.ВКМ_Сотрудник = Строка.ВКМ_Сотрудник;
		Движение.ВКМ_Подразделение = Строка.ВКМ_Подразделение;
		Движение.ВКМ_ГрафикРаботы = Строка.ВКМ_ГрафикРаботы;
		
		Если Строка.ВКМ_ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Строка.ВКМ_ДатаНачала, -12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(Строка.ВКМ_ДатаОкончания, -1));
		КонецЕсли; 
		//}}ВКМ. 
		
		//{{ВКМ. Регистр ВКМ_Удержания
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВКМ_Подразделение = Строка.ВКМ_Подразделение;
		Движение.ВКМ_Сотрудник = Строка.ВКМ_Сотрудник;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.Отпуск;
		//}}ВКМ. 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВКМ_РассчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеФактическийПериодДействия КАК Факт,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеПериодДействия КАК Норма,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета КАК ВидРасчета
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	|			ВидРасчета = &Оклад
	|				И Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		//{{ВКМ. Регистр расчета ВКМ_ОсновныеНачисления
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Результат = Движение.ВКМ_Показатель * ВыборкаДетальныеЗаписи.Факт / ВыборкаДетальныеЗаписи.Норма;
		Движение.ВКМ_Результат = Результат;
		РезультатБезНДФЛ = Результат - (Результат * 0.13);
		Движение.ВКМ_РезультатБезНДФЛ = РезультатБезНДФЛ;
		Движение.ВКМ_ОтработаноЧасов = ВыборкаДетальныеЗаписи.Факт;
		//}}ВКМ.
		
		//{{ВКМ. Регистр ВКМ_Удержания
		Движение = Движения.ВКМ_Удержания[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.ВКМ_Результат = Результат - РезультатБезНДФЛ;
		//}}ВКМ.
		
		//{{ВКМ. Регистр накоплений ВКМ_ВзаиморасчетыССотрудниками Приход
		Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.ВКМ_ВидРасчета = ВыборкаДетальныеЗаписи.ВидРасчета;
		Движение.ВКМ_Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.ВКМ_Сумма = РезультатБезНДФЛ;
		//}}ВКМ.
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать(); 
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры 

Процедура ВКМ_РассчитатьОтпуск()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.ВКМ_РезультатБаза, 0) КАК БазаДоп,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_РезультатБаза, 0) КАК БазаОсн,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_ОтработаноЧасовБаза, 0) КАК БазаОтработано,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеФактическийПериодДействия, 0) КАК Факт,
	|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисления.ВидРасчета КАК ВидРасчета
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				Регистратор = &Ссылка
	|					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				Регистратор = &Ссылка
	|					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(
	|				Регистратор = &Ссылка
	|					И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	Измерения = Новый Массив;
	Измерения.Добавить("ВКМ_Подразделение");
	Измерения.Добавить("ВКМ_Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		//{{ВКМ. Регистр расчета ВКМ_ОсновныеНачисления
		Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.ВКМ_ОтработаноЧасов = ВыборкаДетальныеЗаписи.Факт;
		
		Если ВыборкаДетальныеЗаписи.БазаОтработано = 0 Тогда
			Движение.ВКМ_Результат = 0;
			Продолжить;
		КонецЕсли;
		
		Показатель = ВыборкаДетальныеЗаписи.БазаОсн + ВыборкаДетальныеЗаписи.БазаДоп;
		Движение.ВКМ_Показатель = Показатель;
		Результат = (ВыборкаДетальныеЗаписи.БазаОсн + ВыборкаДетальныеЗаписи.БазаДоп) / ВыборкаДетальныеЗаписи.БазаОтработано * ВыборкаДетальныеЗаписи.Факт;
		Движение.ВКМ_Результат = Результат; 
		РезультатБезНДФЛ = Результат - (Результат * 0.13);
		Движение.ВКМ_РезультатБезНДФЛ = РезультатБезНДФЛ;  
		//}}ВКМ. 
		
		//{{ВКМ. Регистр ВКМ_Удержания
		Движение = Движения.ВКМ_Удержания[ВыборкаДетальныеЗаписи.НомерСтроки - 1]; 
		Движение.ВКМ_Результат = Результат - РезультатБезНДФЛ;
		////}}ВКМ.
		
		//{{ВКМ. Регистр накоплений ВКМ_ВзаиморасчетыССотрудниками Приход
		Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;  
		Движение.ВКМ_ВидРасчета = ВыборкаДетальныеЗаписи.ВидРасчета;
		Движение.ВКМ_Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.ВКМ_Сумма = РезультатБезНДФЛ;
		//}}ВКМ.
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры 
//}}ВКМ. Обработка проведения документа Начисление зарплаты


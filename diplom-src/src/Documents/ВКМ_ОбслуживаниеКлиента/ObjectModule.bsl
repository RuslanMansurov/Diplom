
//{{ВКМ. Реализуем проверку проведения документа: проверяем вид договора - Абонентское обслуживание; 
//       проверяем действует ли договор по срокам заявки на абонентское обслуживание
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
    
    Если Не ВКМ_Договор.ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание") Тогда
        Отказ = Истина;
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Отказ в проведении документа. Выберите договор на абонентское обслуживание.";
        Сообщение.Сообщить();
    КонецЕсли;
    
    Если Дата <= ВКМ_Договор.ВКМ_НачалоДействияДоговора ИЛИ Дата >= ВКМ_Договор.ВКМ_ОкончаниеДействияДоговора Тогда
        Отказ = Истина;
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Отказ в проведении документа. Договор на абонентское обслуживание недействителен.";
        Сообщение.Сообщить();
    КонецЕсли;  
	
	// {{ВКМ.регистр ВКМ_ВыполненныеКлиентуРаботы 
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
	Движение.Период = Дата;
	Движение.ВКМ_Клиент = ВКМ_Клиент;
	Движение.ВКМ_Договор = ВКМ_Договор;
    ЧасыКОплатеКлиенту = ВКМ_ВыполненныеРаботы.Итог("ВКМ_ЧасыКОплатеКлиенту");
	Движение.ВКМ_КоличествоЧасов = ЧасыКОплатеКлиенту;
	Движение.ВКМ_СуммаКОплате = ВКМ_Договор.ВКМ_СтоимостьЧасаРаботы * ЧасыКОплатеКлиенту;
    //}}ВКМ

	//{{ВКМ. Регистр ВКМ_ВыполненныеСотрудникомРаботы 
	//{{ВКМ. Получаем запросом Процент премии за работы из реестра сведений ВКМ_УсловияОплатыСотрудников (СрезПоследних)	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	.ВКМ_Сотрудник КАК ВКМ_Сотрудник,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_ПроцентПремии КАК ВКМ_ПроцентПремии
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|ГДЕ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник = &ВКМ_Сотрудник";
	
	Запрос.УстановитьПараметр("ВКМ_Сотрудник", ВКМ_Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	Если ВыборкаДетальныеЗаписи.ВКМ_ПроцентПремии = Неопределено Тогда
		Отказ = Истина;	
	КонецЕсли;
	//}}ВКМ
	
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.Период = Дата;
		Движение.ВКМ_Специалист = ВКМ_Специалист;
		Движение.ВКМ_Сотрудник = ВКМ_Сотрудник;
		СтавкаЧаса = ВКМ_Договор.ВКМ_СтоимостьЧасаРаботы;
		ФактическиПотраченоЧасов = ВКМ_ВыполненныеРаботы.Итог("ВКМ_ФактическиПотраченоЧасов");
		Движение.ВКМ_ЧасовКОплате = ФактическиПотраченоЧасов;
		Движение.ВКМ_СуммаКОплате = (ФактическиПотраченоЧасов * СтавкаЧаса * ВыборкаДетальныеЗаписи.ВКМ_ПроцентПремии) / 100 ;
	//}}ВКМ
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
    
КонецПроцедуры
//}}ВКМ
